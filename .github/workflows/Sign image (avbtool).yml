# This is a basic workflow to help you get started with Actions

name: Sign image (avbtool)

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      BOOT_URL:
        description: 'URL of the boot image you want to sign'
        required: true
        default: ''
      VBM_URL:
        description: 'URL of the vbmeta image in your device'
        required: true
        default: ''
      CUST:
        description: 'Which partition you want to sign? (boot/recovery)'
        required: true
        default: 'boot'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Prepare envionment
        run: |
          git clone https://github.com/SebaUbuntu/AIK-Linux-mirror aik
          sudo apt install python3 -y

      - name: Get image
        run: | 
          wget ${{ github.event.inputs.BOOT_URL }} -O ./aik/boot.img
          wget ${{ github.event.inputs.VBM_URL }} -O ./avbtool/vbmeta.img
          
      - name: Remove invalid content in your image
        run: |
          ./unpackimg.sh boot.img
          ./repackimg.sh
          cp -v image-new.img ../avbtool/boot.img
        working-directory: aik

      - name: Sign the image
        run: |
          echo "Generate vbmeta sign script..."
          ./scriptgen vbmeta.img
          chmod 755 sign_vbmeta.sh
          echo "Sign vbmeta image..."
          rm rsa4096_${{ github.event.inputs.CUST }}_pub.bin
          cp rsa4096_custom_pub.bin rsa4096_${{ github.event.inputs.CUST }}_pub.bin
          ./sign_vbmeta.sh
          python vbmeta_pad_*$(cat sign_vbmeta.sh |grep padding |cut -d' ' -f 2)*
          echo "VBMeta signed!"
        working-directory: avbtool

      - name: Upload to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Signed image
          path: 'legacy/out-sign.img'
